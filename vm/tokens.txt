Token{ 'fun', Keyword, start={ row=2, col=0 }, end={ row=2, col=3 } }
Token{ 'add', Identifier, start={ row=2, col=4 }, end={ row=2, col=7 } }
Token{ '(', ParenOpen, start={ row=2, col=8 }, end={ row=2, col=9 } }
Token{ 'x', Identifier, start={ row=2, col=8 }, end={ row=2, col=9 } }
Token{ ',', Comma, start={ row=2, col=10 }, end={ row=2, col=11 } }
Token{ 'y', Identifier, start={ row=2, col=11 }, end={ row=2, col=12 } }
Token{ ':', Colon, start={ row=2, col=13 }, end={ row=2, col=14 } }
Token{ 'int', Keyword, start={ row=2, col=13 }, end={ row=2, col=16 } }
Token{ ')', ParenClose, start={ row=2, col=17 }, end={ row=2, col=18 } }
Token{ '{', SquigglyOpen, start={ row=2, col=19 }, end={ row=2, col=20 } }
Token{ 'ret', Keyword, start={ row=3, col=2 }, end={ row=3, col=5 } }
Token{ 'x', Identifier, start={ row=3, col=6 }, end={ row=3, col=7 } }
Token{ '+', BinOp, start={ row=3, col=9 }, end={ row=3, col=10 } }
Token{ 'y', Identifier, start={ row=3, col=10 }, end={ row=3, col=11 } }
Token{ '}', SquigglyClose, start={ row=4, col=1 }, end={ row=4, col=2 } }
Token{ 'var', Keyword, start={ row=7, col=0 }, end={ row=7, col=3 } }
Token{ 'x', Identifier, start={ row=7, col=4 }, end={ row=7, col=5 } }
Token{ ':', Colon, start={ row=7, col=6 }, end={ row=7, col=7 } }
Token{ 'int', Keyword, start={ row=7, col=6 }, end={ row=7, col=9 } }
Token{ '=', BinOp, start={ row=7, col=11 }, end={ row=7, col=12 } }
Token{ '5', Integer, start={ row=7, col=12 }, end={ row=7, col=13 } }
Token{ 'var', Keyword, start={ row=8, col=0 }, end={ row=8, col=3 } }
Token{ 'x', Identifier, start={ row=8, col=4 }, end={ row=8, col=5 } }
Token{ '=', BinOp, start={ row=8, col=7 }, end={ row=8, col=8 } }
Token{ '5', Integer, start={ row=8, col=8 }, end={ row=8, col=9 } }
Token{ 'var', Keyword, start={ row=11, col=0 }, end={ row=11, col=3 } }
Token{ 'x', Identifier, start={ row=11, col=4 }, end={ row=11, col=5 } }
Token{ '=', BinOp, start={ row=11, col=7 }, end={ row=11, col=8 } }
Token{ '{', SquigglyOpen, start={ row=11, col=9 }, end={ row=11, col=10 } }
Token{ '}', SquigglyClose, start={ row=11, col=10 }, end={ row=11, col=11 } }
Token{ 'x', Identifier, start={ row=12, col=0 }, end={ row=12, col=1 } }
Token{ '.', Dot, start={ row=12, col=2 }, end={ row=12, col=3 } }
Token{ 'add', Identifier, start={ row=12, col=2 }, end={ row=12, col=5 } }
Token{ '=', BinOp, start={ row=12, col=7 }, end={ row=12, col=8 } }
Token{ 'add', Identifier, start={ row=12, col=8 }, end={ row=12, col=11 } }
Token{ 'class', Keyword, start={ row=15, col=0 }, end={ row=15, col=5 } }
Token{ 'Y', Identifier, start={ row=15, col=6 }, end={ row=15, col=7 } }
Token{ '{', SquigglyOpen, start={ row=15, col=9 }, end={ row=15, col=10 } }
Token{ 'Y', Identifier, start={ row=16, col=2 }, end={ row=16, col=3 } }
Token{ '(', ParenOpen, start={ row=16, col=4 }, end={ row=16, col=5 } }
Token{ ')', ParenClose, start={ row=16, col=5 }, end={ row=16, col=6 } }
Token{ '{', SquigglyOpen, start={ row=16, col=7 }, end={ row=16, col=8 } }
Token{ 'value', Identifier, start={ row=17, col=4 }, end={ row=17, col=9 } }
Token{ '=', BinOp, start={ row=17, col=11 }, end={ row=17, col=12 } }
Token{ '25', Integer, start={ row=17, col=12 }, end={ row=17, col=14 } }
Token{ '}', SquigglyClose, start={ row=18, col=3 }, end={ row=18, col=4 } }
Token{ 'fun', Keyword, start={ row=20, col=2 }, end={ row=20, col=5 } }
Token{ 'add', Identifier, start={ row=20, col=6 }, end={ row=20, col=9 } }
Token{ '(', ParenOpen, start={ row=20, col=10 }, end={ row=20, col=11 } }
Token{ 'x', Identifier, start={ row=20, col=10 }, end={ row=20, col=11 } }
Token{ ',', Comma, start={ row=20, col=12 }, end={ row=20, col=13 } }
Token{ 'y', Identifier, start={ row=20, col=13 }, end={ row=20, col=14 } }
Token{ ')', ParenClose, start={ row=20, col=15 }, end={ row=20, col=16 } }
Token{ 'ret', Keyword, start={ row=20, col=16 }, end={ row=20, col=19 } }
Token{ 'x', Identifier, start={ row=20, col=20 }, end={ row=20, col=21 } }
Token{ '+', BinOp, start={ row=20, col=23 }, end={ row=20, col=24 } }
Token{ 'y', Identifier, start={ row=20, col=24 }, end={ row=20, col=25 } }
Token{ '+', BinOp, start={ row=20, col=27 }, end={ row=20, col=28 } }
Token{ 'value', Identifier, start={ row=20, col=28 }, end={ row=20, col=33 } }
Token{ 'var', Keyword, start={ row=22, col=2 }, end={ row=22, col=5 } }
Token{ 'value', Identifier, start={ row=22, col=6 }, end={ row=22, col=11 } }
Token{ ':', Colon, start={ row=22, col=12 }, end={ row=22, col=13 } }
Token{ 'int', Keyword, start={ row=22, col=13 }, end={ row=22, col=16 } }
Token{ '}', SquigglyClose, start={ row=23, col=1 }, end={ row=23, col=2 } }
Token{ 'io', Identifier, start={ row=25, col=0 }, end={ row=25, col=2 } }
Token{ '.', Dot, start={ row=25, col=3 }, end={ row=25, col=4 } }
Token{ 'printf', Identifier, start={ row=25, col=3 }, end={ row=25, col=9 } }
Token{ '(', ParenOpen, start={ row=25, col=10 }, end={ row=25, col=11 } }
Token{ '%d', String, start={ row=25, col=10 }, end={ row=25, col=14 } }
Token{ ',', Comma, start={ row=25, col=15 }, end={ row=25, col=16 } }
Token{ 'x', Identifier, start={ row=25, col=16 }, end={ row=25, col=17 } }
Token{ '.', Dot, start={ row=25, col=18 }, end={ row=25, col=19 } }
Token{ 'add', Identifier, start={ row=25, col=18 }, end={ row=25, col=21 } }
Token{ '(', ParenOpen, start={ row=25, col=22 }, end={ row=25, col=23 } }
Token{ '10', Integer, start={ row=25, col=22 }, end={ row=25, col=24 } }
Token{ ',', Comma, start={ row=25, col=25 }, end={ row=25, col=26 } }
Token{ '5', Integer, start={ row=25, col=26 }, end={ row=25, col=27 } }
Token{ ')', ParenClose, start={ row=25, col=28 }, end={ row=25, col=29 } }
Token{ ')', ParenClose, start={ row=25, col=29 }, end={ row=25, col=30 } }
Token{ 'var', Keyword, start={ row=27, col=0 }, end={ row=27, col=3 } }
Token{ 'y', Identifier, start={ row=27, col=4 }, end={ row=27, col=5 } }
Token{ '=', BinOp, start={ row=27, col=7 }, end={ row=27, col=8 } }
Token{ 'Y', Identifier, start={ row=27, col=8 }, end={ row=27, col=9 } }
Token{ '(', ParenOpen, start={ row=27, col=10 }, end={ row=27, col=11 } }
Token{ ')', ParenClose, start={ row=27, col=11 }, end={ row=27, col=12 } }
Token{ 'y', Identifier, start={ row=28, col=0 }, end={ row=28, col=1 } }
Token{ '.', Dot, start={ row=28, col=2 }, end={ row=28, col=3 } }
Token{ 'value', Identifier, start={ row=28, col=2 }, end={ row=28, col=7 } }
Token{ '=', BinOp, start={ row=28, col=9 }, end={ row=28, col=10 } }
Token{ '20', Integer, start={ row=28, col=10 }, end={ row=28, col=12 } }
Token{ 'io', Identifier, start={ row=29, col=0 }, end={ row=29, col=2 } }
Token{ '.', Dot, start={ row=29, col=3 }, end={ row=29, col=4 } }
Token{ 'printf', Identifier, start={ row=29, col=3 }, end={ row=29, col=9 } }
Token{ '(', ParenOpen, start={ row=29, col=10 }, end={ row=29, col=11 } }
Token{ '%d %d', String, start={ row=29, col=10 }, end={ row=29, col=17 } }
Token{ ')', ParenClose, start={ row=29, col=18 }, end={ row=29, col=19 } }
Token{ ',', Comma, start={ row=29, col=19 }, end={ row=29, col=20 } }
Token{ 'y', Identifier, start={ row=29, col=20 }, end={ row=29, col=21 } }
Token{ '.', Dot, start={ row=29, col=22 }, end={ row=29, col=23 } }
Token{ 'value', Identifier, start={ row=29, col=22 }, end={ row=29, col=27 } }
Token{ ',', Comma, start={ row=29, col=28 }, end={ row=29, col=29 } }
Token{ 'y', Identifier, start={ row=29, col=29 }, end={ row=29, col=30 } }
Token{ '.', Dot, start={ row=29, col=31 }, end={ row=29, col=32 } }
Token{ 'add', Identifier, start={ row=29, col=31 }, end={ row=29, col=34 } }
Token{ '(', ParenOpen, start={ row=29, col=35 }, end={ row=29, col=36 } }
Token{ '10', Integer, start={ row=29, col=35 }, end={ row=29, col=37 } }
Token{ ',', Comma, start={ row=29, col=38 }, end={ row=29, col=39 } }
Token{ '5', Integer, start={ row=29, col=39 }, end={ row=29, col=40 } }
Token{ ')', ParenClose, start={ row=29, col=41 }, end={ row=29, col=42 } }
Token{ ')', ParenClose, start={ row=29, col=42 }, end={ row=29, col=43 } }
